# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: build
  jobs:
  - job: firstjob
    steps:
    # - bash: java -version
    # - bash: node --version
    # - bash: mvn --version 
    # - bash: echo build firstjob
    # - bash: echo variable $(pipelinevariable)
    # - bash: echo $(build.buildNumber)
    # - bash: echo $(build.buildId)
    # - bash: echo $(build.SourceBranchName)
    # - bash: echo $(build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory) 
    - bash: echo $(build.ArtifactStagingDirectory)
    - bash: ls -R $(build.ArtifactStagingDirectory)
    - bash: ls -R $(build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*'
        TargetFolder: '$(build.ArtifactStagingDirectory)'
    - bash: ls -R $(build.ArtifactStagingDirectory)
#   - job: secondjob
#     steps:
#     - bash: echo build secondjob

# - stage: devdeploy
#   variables:
#     environment: Dev
#   dependsOn: build
#   jobs:
#   - job: devdeployjob
#     steps:
#     - bash: echo $(environment)deployjob
# - stage: Qadeploy
#   variables:
#     environment: Qa
#   dependsOn: devdeploy
#   jobs:
#   - job: Qadeploy
#     steps:
#     - bash: echo $(environment)deployjob
# - stage: proddeploy
#   variables:
#     environment: Prod
#   dependsOn:
#   - devdeploy
#   - Qadeploy
#   jobs:
#   - job: proddeployjob
#     steps:
#     - bash: echo $(environment)deployjob
